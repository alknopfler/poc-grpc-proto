# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: template.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import error_pb2 as error__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='template.proto',
  package='template',
  syntax='proto3',
  serialized_pb=_b('\n\x0etemplate.proto\x12\x08template\x1a\x0b\x65rror.proto\"\xf2\x01\n\x17GenerateTemplateRequest\x12\x12\n\ntemplateId\x18\x01 \x01(\t\x12\x36\n\x05\x63hunk\x18\x03 \x01(\x0b\x32\'.template.GenerateTemplateRequest.Chunk\x12:\n\x06params\x18\x02 \x03(\x0b\x32*.template.GenerateTemplateRequest.KeyValue\x1a\'\n\x05\x43hunk\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\x12\x10\n\x08position\x18\x02 \x01(\x03\x1a&\n\x08KeyValue\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"Y\n\x18GenerateTemplateResponse\x12 \n\x05\x65rror\x18\x01 \x01(\x0b\x32\x0f.template.ErrorH\x00\x12\x10\n\x06result\x18\x02 \x01(\tH\x00\x42\t\n\x07\x63ontent2e\n\x08Template\x12Y\n\x10GenerateTemplate\x12!.template.GenerateTemplateRequest\x1a\".template.GenerateTemplateResponseb\x06proto3')
  ,
  dependencies=[error__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_GENERATETEMPLATEREQUEST_CHUNK = _descriptor.Descriptor(
  name='Chunk',
  full_name='template.GenerateTemplateRequest.Chunk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='template.GenerateTemplateRequest.Chunk.data', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='position', full_name='template.GenerateTemplateRequest.Chunk.position', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=205,
  serialized_end=244,
)

_GENERATETEMPLATEREQUEST_KEYVALUE = _descriptor.Descriptor(
  name='KeyValue',
  full_name='template.GenerateTemplateRequest.KeyValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='template.GenerateTemplateRequest.KeyValue.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='template.GenerateTemplateRequest.KeyValue.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=246,
  serialized_end=284,
)

_GENERATETEMPLATEREQUEST = _descriptor.Descriptor(
  name='GenerateTemplateRequest',
  full_name='template.GenerateTemplateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='templateId', full_name='template.GenerateTemplateRequest.templateId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='chunk', full_name='template.GenerateTemplateRequest.chunk', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='params', full_name='template.GenerateTemplateRequest.params', index=2,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_GENERATETEMPLATEREQUEST_CHUNK, _GENERATETEMPLATEREQUEST_KEYVALUE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=42,
  serialized_end=284,
)


_GENERATETEMPLATERESPONSE = _descriptor.Descriptor(
  name='GenerateTemplateResponse',
  full_name='template.GenerateTemplateResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='error', full_name='template.GenerateTemplateResponse.error', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='result', full_name='template.GenerateTemplateResponse.result', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='content', full_name='template.GenerateTemplateResponse.content',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=286,
  serialized_end=375,
)

_GENERATETEMPLATEREQUEST_CHUNK.containing_type = _GENERATETEMPLATEREQUEST
_GENERATETEMPLATEREQUEST_KEYVALUE.containing_type = _GENERATETEMPLATEREQUEST
_GENERATETEMPLATEREQUEST.fields_by_name['chunk'].message_type = _GENERATETEMPLATEREQUEST_CHUNK
_GENERATETEMPLATEREQUEST.fields_by_name['params'].message_type = _GENERATETEMPLATEREQUEST_KEYVALUE
_GENERATETEMPLATERESPONSE.fields_by_name['error'].message_type = error__pb2._ERROR
_GENERATETEMPLATERESPONSE.oneofs_by_name['content'].fields.append(
  _GENERATETEMPLATERESPONSE.fields_by_name['error'])
_GENERATETEMPLATERESPONSE.fields_by_name['error'].containing_oneof = _GENERATETEMPLATERESPONSE.oneofs_by_name['content']
_GENERATETEMPLATERESPONSE.oneofs_by_name['content'].fields.append(
  _GENERATETEMPLATERESPONSE.fields_by_name['result'])
_GENERATETEMPLATERESPONSE.fields_by_name['result'].containing_oneof = _GENERATETEMPLATERESPONSE.oneofs_by_name['content']
DESCRIPTOR.message_types_by_name['GenerateTemplateRequest'] = _GENERATETEMPLATEREQUEST
DESCRIPTOR.message_types_by_name['GenerateTemplateResponse'] = _GENERATETEMPLATERESPONSE

GenerateTemplateRequest = _reflection.GeneratedProtocolMessageType('GenerateTemplateRequest', (_message.Message,), dict(

  Chunk = _reflection.GeneratedProtocolMessageType('Chunk', (_message.Message,), dict(
    DESCRIPTOR = _GENERATETEMPLATEREQUEST_CHUNK,
    __module__ = 'template_pb2'
    # @@protoc_insertion_point(class_scope:template.GenerateTemplateRequest.Chunk)
    ))
  ,

  KeyValue = _reflection.GeneratedProtocolMessageType('KeyValue', (_message.Message,), dict(
    DESCRIPTOR = _GENERATETEMPLATEREQUEST_KEYVALUE,
    __module__ = 'template_pb2'
    # @@protoc_insertion_point(class_scope:template.GenerateTemplateRequest.KeyValue)
    ))
  ,
  DESCRIPTOR = _GENERATETEMPLATEREQUEST,
  __module__ = 'template_pb2'
  # @@protoc_insertion_point(class_scope:template.GenerateTemplateRequest)
  ))
_sym_db.RegisterMessage(GenerateTemplateRequest)
_sym_db.RegisterMessage(GenerateTemplateRequest.Chunk)
_sym_db.RegisterMessage(GenerateTemplateRequest.KeyValue)

GenerateTemplateResponse = _reflection.GeneratedProtocolMessageType('GenerateTemplateResponse', (_message.Message,), dict(
  DESCRIPTOR = _GENERATETEMPLATERESPONSE,
  __module__ = 'template_pb2'
  # @@protoc_insertion_point(class_scope:template.GenerateTemplateResponse)
  ))
_sym_db.RegisterMessage(GenerateTemplateResponse)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class TemplateStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GenerateTemplate = channel.unary_unary(
          '/template.Template/GenerateTemplate',
          request_serializer=GenerateTemplateRequest.SerializeToString,
          response_deserializer=GenerateTemplateResponse.FromString,
          )


  class TemplateServicer(object):

    def GenerateTemplate(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_TemplateServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GenerateTemplate': grpc.unary_unary_rpc_method_handler(
            servicer.GenerateTemplate,
            request_deserializer=GenerateTemplateRequest.FromString,
            response_serializer=GenerateTemplateResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'template.Template', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaTemplateServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def GenerateTemplate(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaTemplateStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def GenerateTemplate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    GenerateTemplate.future = None


  def beta_create_Template_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('template.Template', 'GenerateTemplate'): GenerateTemplateRequest.FromString,
    }
    response_serializers = {
      ('template.Template', 'GenerateTemplate'): GenerateTemplateResponse.SerializeToString,
    }
    method_implementations = {
      ('template.Template', 'GenerateTemplate'): face_utilities.unary_unary_inline(servicer.GenerateTemplate),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Template_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('template.Template', 'GenerateTemplate'): GenerateTemplateRequest.SerializeToString,
    }
    response_deserializers = {
      ('template.Template', 'GenerateTemplate'): GenerateTemplateResponse.FromString,
    }
    cardinalities = {
      'GenerateTemplate': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'template.Template', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
